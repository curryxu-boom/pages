(window.webpackJsonp=window.webpackJsonp||[]).push([[543],{1360:function(s,t,a){"use strict";a.r(t);var n=a(1),r=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h1",{attrs:{id:"mysql索引原理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#mysql索引原理"}},[s._v("#")]),s._v(" mysql索引原理")]),s._v(" "),a("h2",{attrs:{id:"_1、mysql调优到底调优啥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_1、mysql调优到底调优啥"}},[s._v("#")]),s._v(" 1、MySQL调优到底调优啥")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("尽量的让自己的SQL语句走索引、来提高自己的SQL语句执行的效率、避免全表进行扫描")])])]),s._v(" "),a("h2",{attrs:{id:"_2、什么是索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_2、什么是索引"}},[s._v("#")]),s._v(" 2、什么是索引")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("如果将MySQL比作一本书的话、那么索引就相当于是这本书的目录、通过这个目录就能快速的定位到这个数据")])])]),s._v(" "),a("h2",{attrs:{id:"_3、索引的基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_3、索引的基本使用"}},[s._v("#")]),s._v(" 3、索引的基本使用")]),s._v(" "),a("div",{staticClass:"language-sql line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-sql"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("CREATE")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" t_user"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\nid "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INTEGER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("PRIMARY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("KEY")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("AUTO_INCREMENT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nuserName "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nPASSWORD "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("VARCHAR")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\ngender "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("SMALLINT")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\nbirthday "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("DATETIME")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" t_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 如果多个字段的话 那么直接")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ALTER")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("TABLE")]),s._v(" t_user "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("ADD")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("INDEX")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("userName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("gender"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("password"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(";")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("explain")]),s._v("  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 关键字可以查看查询的状态，是否使用索引以及查询的次数")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("EXPLAIN")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("select")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("from")]),s._v(" t_user\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 存储引擎是有关系的  Innodb")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("frm ："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 存的是表的结构信息")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("ibd："),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 存放的是 数据 和 索引")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 如果是 myisam的话 那么是三个文件")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 一个文件存储的是 数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 一个文件存储的是 表的格式")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("-- 一个文件存储的是 索引")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br")])]),a("h2",{attrs:{id:"_4、mysql的数据存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_4、mysql的数据存储"}},[s._v("#")]),s._v(" 4、MySQL的数据存储")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("默认是 b+树 的结构进行存储的")])])]),s._v(" "),a("h2",{attrs:{id:"_5、为什么使用b树-b-树作为索引底层的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5、为什么使用b树-b-树作为索引底层的存储"}},[s._v("#")]),s._v(" 5、为什么使用B树/B+树作为索引底层的存储")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("树结构网址：")]),a("a",{attrs:{href:"https://www.cs.usfca.edu/~galles/visualization/Algorithms.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://www.cs.usfca.edu/~galles/visualization/Algorithms.html"),a("OutboundLink")],1)])]),s._v(" "),a("h3",{attrs:{id:"_5-1、二叉树的存储"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-1、二叉树的存储"}},[s._v("#")]),s._v(" 5.1、二叉树的存储")]),s._v(" "),a("img",{attrs:{src:"http://101.42.39.123:9000/whys/mysql-1597369877493.png"}}),s._v(" "),a("p",[s._v("存在的问题：假设现在我们要查询 7这个数据 那么这个树要遍历7个节点 才能找到这个数据  那么假设我们现在 这个数据 达到了 100W 那么你要遍历100W级别吗?")]),s._v(" "),a("p",[s._v("所以二叉树的存储结构不靠谱  遍历的节点过多")]),s._v(" "),a("h3",{attrs:{id:"_5-2、红黑树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-2、红黑树"}},[s._v("#")]),s._v(" 5.2、红黑树")]),s._v(" "),a("img",{attrs:{src:"http://101.42.39.123:9000/whys/mysql-1597370139249.png"}}),s._v(" "),a("p",[s._v("相比较二叉树而言  红黑树 做了 自动的平衡 相对来说 遍历的层级要少一些，也就是说如果实在 二叉树和红黑树之间做一个选择的话 那么 选择红黑树  要比选择二叉树的效率高  但是这个鬼在 数据量比较大的时候 依然要遍历非常多的节点  整体效率还是不高")]),s._v(" "),a("h3",{attrs:{id:"_5-3、b树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-3、b树"}},[s._v("#")]),s._v(" 5.3、B树")]),s._v(" "),a("img",{attrs:{src:"http://101.42.39.123:9000/whys/mysql-1597370460543.png"}}),s._v(" "),a("p",[s._v("这个厉害的是 在同一个节点能够存储多个数据、也就是说 相同的数据  在B树的情况下 遍历的层级 更少了 而且他的深度是可以 定义的 从而相比较于 红黑树而言  效率就更高了")]),s._v(" "),a("p",[s._v("他的深度确定存储几个后开始分支")]),s._v(" "),a("p",[s._v("缺点：不适合做范围内的查询 所以还需要改进")]),s._v(" "),a("h3",{attrs:{id:"_5-4、b-树"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_5-4、b-树"}},[s._v("#")]),s._v(" 5.4、B+树")]),s._v(" "),a("img",{attrs:{src:"http://101.42.39.123:9000/whys/mysql-1597371444339.png"}}),s._v(" "),a("p",[s._v("这种结构牛逼点是：所有数据都存储到了 叶子节点上、非叶子节点存储索引采用冗余节点的方式 牺牲了 空间换取了效率")]),s._v(" "),a("p",[s._v("叶子节点 包含所有索引字段")]),s._v(" "),a("p",[s._v("而且叶子节点上 自带双向链表、这种结构就有利于 范围内查询了")]),s._v(" "),a("p",[s._v("通过上面一些列的分析 也就给定除了 索引的底层 会会用B+树这种结构")]),s._v(" "),a("h2",{attrs:{id:"_6、聚集索引和非聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6、聚集索引和非聚集索引"}},[s._v("#")]),s._v(" 6、聚集索引和非聚集索引")]),s._v(" "),a("h3",{attrs:{id:"_6-1、非聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-1、非聚集索引"}},[s._v("#")]),s._v(" 6.1、非聚集索引")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("所谓的非聚集索引的意思是：在MyIsam这种存储引擎中、我们的主键索引存储的不是表中的 一整条的数据 而是这条数据 所在的物理地址 这个就叫做 非聚集索引")])])]),s._v(" "),a("h3",{attrs:{id:"_6-2、聚集索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_6-2、聚集索引"}},[s._v("#")]),s._v(" 6.2、聚集索引")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("所谓的聚集索引  指的是在 innodb引擎中 我们的主键索引存储的是 整条数据  不是 当前数据的物理地址  这个就称为聚集索引")])]),s._v(" "),a("p",[a("strong",[s._v("为什么Innodb必须有主键，并且推荐使用整型的自增主键？")])]),s._v(" "),a("ul",[a("li",[s._v("因为只有一个字段作为索引的情况下，他的索引是有顺序的，数字比较顺序的速度比字母的快，而且他是从小到大进行排序的，数字比较是最快的。如果Innodb没有主键他会默认选择一列为主键")])]),s._v(" "),a("p",[a("strong",[s._v("为什么非主键索引结构叶子节点存储的是主键值？")])]),s._v(" "),a("ul",[a("li",[s._v("一致性和节省存储空间。这样在一页的索引上可以存储更多的数据量。")])])]),s._v(" "),a("h2",{attrs:{id:"_7、联合索引"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_7、联合索引"}},[s._v("#")]),s._v(" 7、联合索引")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("索引的最左前缀原理：也就是和创建的索引的顺序要一致，不然可能不会走索引。")])]),s._v(" "),a("p",[s._v("先通过第一个字段排序，如果第一个字段是一致的再通过第二个字段排序，如果第二个字段是一致的再通过第三个字段排序")])]),s._v(" "),a("h2",{attrs:{id:"_8、explain工具介绍"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#_8、explain工具介绍"}},[s._v("#")]),s._v(" 8、Explain工具介绍")]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("使用"),a("code",[s._v("EXPLAIN")]),s._v("关键字可以模拟优化器执行SQL语句，分析你的查询语句或是结构的性能瓶颈")])]),s._v(" "),a("p",[s._v("在 select 语句之前增加 "),a("code",[s._v("explain")]),s._v(" 关键字，MySQL 会在查询上设置一个标记，执行查询会返\n回执行计划的信息，而不是执行这条SQL")]),s._v(" "),a("p",[s._v("注意：")]),s._v(" "),a("ul",[a("li",[s._v("如果 from 中包含子查询，仍会执行该子查询，将结果放入临时表中")])])]),s._v(" "),a("blockquote",[a("p",[a("strong",[s._v("什么是覆盖索引 ？")])]),s._v(" "),a("p",[a("code",[s._v("Using index")]),s._v("：使用覆盖索引意思是查询的字段在索引字段中都存在")])])])}),[],!1,null,null,null);t.default=r.exports}}]);