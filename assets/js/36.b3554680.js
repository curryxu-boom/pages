(window.webpackJsonp=window.webpackJsonp||[]).push([[36],{1024:function(t,s,a){"use strict";a.r(s);var r=a(1),e=Object(r.a)({},(function(){var t=this,s=t.$createElement,r=t._self._c||s;return r("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[r("img",{attrs:{src:a(445)}}),t._v(" "),r("h2",{attrs:{id:"标记-清除算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标记-清除算法"}},[t._v("#")]),t._v(" 标记-清除算法")]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("算法分为“标记”和“清除”阶段：首先标记出所有需要回收的对象，在标记完成后统一回收所有被标记的对象。它是最基础的收集算法，效率也很高，但是会带来两个明显的问题：")])]),t._v(" "),r("p",[t._v("效率问题")]),t._v(" "),r("p",[t._v("空间问题（标记清除后会产生大量不连续的碎片）")])]),t._v(" "),r("img",{attrs:{src:a(446)}}),t._v(" "),r("h2",{attrs:{id:"复制算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#复制算法"}},[t._v("#")]),t._v(" 复制算法")]),t._v(" "),r("blockquote",[r("p",[r("strong",[t._v("为了解决效率问题，“复制”收集算法出现了。它可以将内存分为大小相同的两块，每次使用其中的一块。当这一块的内存使用完后，就将还存活的对象复制到另一块去，然后再把使用的空间一次清理掉。这样就使每次的内存回收都是对内存区间的一半进行回收。")])])]),t._v(" "),r("img",{attrs:{src:a(447)}}),t._v(" "),r("h2",{attrs:{id:"标记-整理算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#标记-整理算法"}},[t._v("#")]),t._v(" 标记-整理算法")]),t._v(" "),r("blockquote",[r("p",[t._v("根据老年代的特点特出的一种标记算法，标记过程仍然与“标记-清除”算法一样，但后续步骤不是直接对可回收对象回收，而是让所有存活的对象向一段移动，然后直接清理掉端边界以外的内存。")])]),t._v(" "),r("img",{attrs:{src:a(448)}}),t._v(" "),r("h2",{attrs:{id:"分代收集算法"}},[r("a",{staticClass:"header-anchor",attrs:{href:"#分代收集算法"}},[t._v("#")]),t._v(" 分代收集算法")]),t._v(" "),r("ul",[r("li",[t._v("当前虚拟机的垃圾收集都采用分代收集算法")]),t._v(" "),r("li",[t._v("这种算法没有什么新的思想，只是根据对象存活周期的不同将内存分为几块。一般将java堆分为新生代和老年代，这样我们就可以根据各个年代的特点选择合适的垃圾收集算法。")]),t._v(" "),r("li",[t._v("比如在新生代中，每次收集都会有大量对象死去，所以可以选择复制算法，只需要付出少量对象的复制成本就可以完成每次垃圾收集。而老年代的对象存活几率是比较高的，而且没有额外的空间对它进行分配担保，所以我们必须选择"),r("code",[t._v("标记-清除")]),t._v("或"),r("code",[t._v("标记-整理")]),t._v("算法进行垃圾收集。")])])])}),[],!1,null,null,null);s.default=e.exports},445:function(t,s,a){t.exports=a.p+"assets/img/30.0dd45b50.png"},446:function(t,s,a){t.exports=a.p+"assets/img/31.10b248f3.png"},447:function(t,s,a){t.exports=a.p+"assets/img/32.ad573a95.png"},448:function(t,s,a){t.exports=a.p+"assets/img/33.c01cfe92.png"}}]);