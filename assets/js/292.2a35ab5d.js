(window.webpackJsonp=window.webpackJsonp||[]).push([[292],{1058:function(n,t,o){"use strict";o.r(t);var e=o(1),r=Object(e.a)({},(function(){var n=this,t=n.$createElement,o=n._self._c||t;return o("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[o("p",[n._v("synchronized 实际是用对象锁保证了临界区内代码的原子性，临界区内的代码对外是不可分割的，不会被线程切 换所打断。 为了加深理解，请思考下面的问题")]),n._v(" "),o("p",[n._v("如果把 synchronized(obj) 放在 for 循环的外面，如何理解？-- 原子性")]),n._v(" "),o("p",[n._v("如果 t1 synchronized(obj1) 而 t2 synchronized(obj2) 会怎样运作？-- 锁对象")]),n._v(" "),o("p",[n._v("如果 t1 synchronized(obj) 而 t2 没有加会怎么样？如何理解？-- 锁对象")])])}),[],!1,null,null,null);t.default=r.exports}}]);